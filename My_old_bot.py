import telebot
from telebot import types
import random
import datetime
from datetime import datetime, timedelta
import requests
import pyowm
from pyowm.utils.config import get_default_config
from bot_token import *            


bot = telebot.TeleBot(TOKEN)
@bot.message_handler(content_types=['text']) 

#! /usr/bin/env python
# -*- coding: utf-8 -*-

def get_text_messages(message):
    hi = ['–ü—Ä–∏–≤–µ—Ç', "–ù—É –ø—Ä–∏–≤–µ—Ç","–ö—É", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ","–ó–¥–∞—Ä–æ–≤–∞","–•–∞–π","Privet",'P','–ü','–ü—Ä–∏–≤'] 
    stik = open('C:/Users/250/Desktop/Py/Bot/stikers/ky.webp', 'rb')
    stik2 = open('C:/Users/250/Desktop/Py/Bot/stikers/kek1.tgs', 'rb')

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)        
    item1 = types.KeyboardButton('–ü–æ–≥–æ–¥–∞\nüå™')                        # –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –ø–æ–≥–æ–¥–µ 
    item2 = types.KeyboardButton('–ê–Ω–µ–∫–¥–æ—Ç—ã\nüòÇ')                     # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–Ω–µ–∫–¥–æ—Ç—ã —Å —Å–∞–π—Ç–∞ —Ä–∂—É–Ω–µ–º–æ–≥—É.—Ä—É
    item3 = types.KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüò¢')                     # –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∞—Ç—É
    item4 = types.KeyboardButton('–ü–∞—Ä—ã —Å–µ–≥–æ–¥–Ω—èüò°')                   # –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
    item5 = types.KeyboardButton('üîÆ–ü–æ–π—Ç–∏ –ª–∏ –Ω–∞ –ø–∞—Ä—É?üîÆ')            # –ì–∞–¥–∞–µ—Ç –Ω–∞ –ø–æ—Å–µ—â–µ–Ω–∏–µ –ø–∞—Ä
    item6 = types.KeyboardButton('–ü–∞—Ä—ã –∑–∞–≤—Ç—Ä–∞üßé‚Äç‚ôÇÔ∏è')                     # –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞
    item7 = types.KeyboardButton('–°–ª—É—á–∞–π–Ω—ã–π\nüíò–†–æ–º–∞–Ωüíò')            # –í—ã–≤–æ–¥–∏—Ç —Å–ª—É—á–∞–π–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –†–æ–º–∞–Ω–∞
    markup.add(item1,item7,item3,item4,item2,item6,item5)            
             
    bot.send_chat_action(message.chat.id, 'typing')

    if message.text.capitalize() in hi:
        bot.send_message(message.chat.id, '–ë–æ—Ç –Ω–∞ –º–µ—Å—Ç–µ', reply_markup=markup)
        bot.register_next_step_handler(message, start)
    elif message.text == '/help':
        bot.send_message(message.chat.id, '–ò—Å–ø–æ–ª—å–∑—É–π–Ω–µ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\nP.S. –ï—Å–ª–∏ –±–æ—Ç, –≤–¥—Ä—É–≥, –Ω–∞—á–Ω–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –¥–≤–∞–∂–¥—ã, –ø–æ–ø—Ä–æ—Å–∏ –∞–Ω–µ–∫–¥–æ—Ç –∏ –≤—Å–µ —Å–Ω–æ–≤–∞ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç\n–î–∞-–¥–∞, –Ω–µ —É–¥–∏–≤–ª—è–π—Ç–µ—Å—å')
        bot.send_sticker(message.chat.id, stik2)
    elif message.text == '/start':
        bot.send_sticker(message.chat.id, stik)
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –±—ã—Ç–∏—è, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç\n–ù–∞–ø–∏—à–∏ —á—Ç–æ —É–≥–æ–¥–Ω–æ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è".format(message.from_user, bot.get_me()),parse_mode='html')
    else:
        bot.send_message(message.chat.id, '–ë–æ—Ç –Ω–∞ –º–µ—Å—Ç–µ', reply_markup=markup)
        bot.register_next_step_handler(message, start)


def start(message):
    if message.text == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüò¢':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É. –ù–∞–ø—Ä–∏–º–µ—Ä 25.05')
        bot.register_next_step_handler(message, razp)

    elif message.text == 'üîÆ–ü–æ–π—Ç–∏ –ª–∏ –Ω–∞ –ø–∞—Ä—É?üîÆ':
        dilema(message)
                                    
    elif message.text == '–ü–æ–≥–æ–¥–∞\nüå™':
        bot.send_chat_action(message.chat.id, 'typing')                
        Pogoda(message)

    elif message.text == '–°–ª—É—á–∞–π–Ω—ã–π\nüíò–†–æ–º–∞–Ωüíò':
        RandomRoman(message)

    elif message.text == '–ê–Ω–µ–∫–¥–æ—Ç—ã\nüòÇ':                                  
        global anekboard   
        anekboard = types.InlineKeyboardMarkup(row_width=2)

        item1 = types.InlineKeyboardButton('–ê–Ω–µ–∫–¥–æ—Ç—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±', callback_data='b')
        item2 = types.InlineKeyboardButton('–ê–Ω–µ–∫–¥–æ—Ç—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±+', callback_data='b+')
        item3 = types.InlineKeyboardButton('–°—Ç–∏—à–∫–∏', callback_data='poetry')

        anekboard.add(item1,item2,item3)

        bot.send_message(message.chat.id, '–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π –∑–∞–ø–∞—Å –∞–Ω–µ–∫–¥–æ—Ç–æ–≤', reply_markup=anekboard) 

    elif message.text == '–ü–∞—Ä—ã —Å–µ–≥–æ–¥–Ω—èüò°': 
        segodnya(message)               

    elif message.text == '–ü–∞—Ä—ã –∑–∞–≤—Ç—Ä–∞üßé‚Äç‚ôÇÔ∏è':
        zavtra(message)

    elif message.text == '/help':
        bot.send_message(message.chat.id, '–ò—Å–ø–æ–ª—å–∑—É–π–Ω–µ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\nP.S. –ï—Å–ª–∏ –±–æ—Ç, –≤–¥—Ä—É–≥, –Ω–∞—á–Ω–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –¥–≤–∞–∂–¥—ã, –ø–æ–ø—Ä–æ—Å–∏ –∞–Ω–µ–∫–¥–æ—Ç –∏ –≤—Å–µ —Å–Ω–æ–≤–∞ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç\n–î–∞-–¥–∞, –Ω–µ —É–¥–∏–≤–ª—è–π—Ç–µ—Å—å')
        bot.register_next_step_handler(message, start)

    else:
        bot.send_message(message.from_user.id, '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è')     
        bot.register_next_step_handler(message, start)


def dilema(message):
    try:
        stik1 = open('C:/Users/250/Desktop/Py/Bot/stikers/kek3.PNG', 'rb')
        stik2 = open('C:/Users/250/Desktop/Py/Bot/stikers/kek4.jpg', 'rb')
        stik3 = open('C:/Users/250/Desktop/Py/Bot/stikers/kek5.PNG', 'rb')
        gif = open('C:/Users/250/Desktop/Py/Bot/stikers/tenor.gif', 'rb') 
        Theses = {
        0:'–ü—Ä–∏–¥–µ—Ç—Å—è –∏–¥—Ç–∏. –¢–∞–∫–æ–≤ –ø—É—Ç—å.',
        1:'–í—Å–µ–≥–¥–∞ –ª—É—á—à–µ –Ω–∞–±–ª—é–¥–∞—Ç—å –∑–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–º, —á–µ–º –¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ —Å–∞–º–æ–º—É.\n <i>‚Äî–ì–æ–º–µ—Ä –°–∏–º–ø—Å–æ–Ω</i>',
        2:'–ü–æ–ø—ã—Ç–∫–∞ - –ø–µ—Ä–≤—ã–π —à–∞–≥ –∫ –ø—Ä–æ–≤–∞–ª—É.\n <i>‚Äî–ì–æ–º–µ—Ä –°–∏–º–ø—Å–æ–Ω</i>',
        3:'–ù–µ –≤–∏–∂—É —Å–º—ã—Å–ª–∞ –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –¥–æ–º–∞. –ú—ã –≤—Å–µ —Ä–∞–≤–Ω–æ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –æ–±—Ä–∞—Ç–Ω–æ.\n <i>‚Äî–ì–æ–º–µ—Ä –°–∏–º–ø—Å–æ–Ω</i>',
        4:'–ù–µ –≤–∏–∂—É —Å–º—ã—Å–ª–∞ –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –¥–æ–º–∞. –ú—ã –≤—Å–µ —Ä–∞–≤–Ω–æ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –æ–±—Ä–∞—Ç–Ω–æ.\n <i>‚Äî–ì–æ–º–µ—Ä –°–∏–º–ø—Å–æ–Ω</i>'
        }
        

        Tkey = random.randint(0,4)

        bot.send_chat_action(message.chat.id, 'typing')
        bot.send_sticker(message.chat.id, random.choice([stik1,stik2,stik3]))       
        if Tkey > 0:
            bot.send_message(message.chat.id, '%s –≤—Ö–æ–¥–∏—Ç –≤ %s –¥–æ–º' % (random.choice(['–ú–∞—Ä—Å','–Æ–ø–∏—Ç–µ—Ä','–°–∞—Ç—É—Ä–Ω','–ù–µ–ø—Ç—É–Ω','–í–µ–Ω–µ—Ä–∞']),random.choice(['–ø–µ—Ä–≤—ã–π','—Ç—Ä–µ—Ç–∏–π','—á–µ—Ç–≤–µ—Ä—Ç—ã–π','–ø—è—Ç—ã–π','—à–µ—Å—Ç–æ–π','—Å–µ–¥—å–º–æ–π','–≤–æ—Å—å–º–æ–π'])))
            bot.send_message(message.chat.id, '–°–≤–µ—á–∏ –≥–æ—Ä—è—Ç %s, %s, –ø–ª–∞–º—è %s' % (random.choice(['—Ä–æ–≤–Ω–æ','—á–µ—Ä–Ω—ã–º –ø–ª–∞–º–µ–Ω–µ–º, –∫–æ–ø—Ç—è—Ç']),random.choice(['—Ç—Ä–µ—â–∞—Ç','–Ω–µ —Ç—Ä–µ—â–∞—Ç']),random.choice(['—Ç—É—Å–∫–ª–æ–µ','—è—Ä–∫–æ–µ','–æ—Å–ª–µ–ø–∏—Ç–µ–ª—å–Ω–æ–µ'])))
            bot.send_message(message.chat.id, '%s —É–∑–æ—Ä –∫–æ—Ñ–µ–π–Ω–æ–π –≥—É—â–∏ %s –±–ª–∏–∂–µ –∫ %s' % (random.choice(['–ë–æ–ª—å—à–æ–π','–ú–∞–ª—ã–π']), random.choice(['—Ç–µ–º–Ω–µ–µ—Ç','—Å–≤–µ—Ç–ª–µ–µ—Ç']), random.choice(['—Ä—É—á–∫–µ','–∫—Ä–∞—é'])))
            bot.send_message(message.chat.id, '–ó–≤–µ–∑–¥—ã –≥–æ–≤–æ—Ä—è—Ç: <b>%s</b>' % '–û—Å—Ç–∞–Ω—å—Å—è –¥–æ–º–∞.',parse_mode='html')
            bot.send_message(message.chat.id, Theses[Tkey],parse_mode='html')
        else:
            bot.send_message(message.chat.id, '–í–∞—à–∞ –ø–ª–∞–Ω–µ—Ç–∞-–ø–æ–∫—Ä–æ–≤–∏—Ç–µ–ª—å —Å–∫—Ä—ã–ª–∞—Å—å –∑–∞ —á–µ—Ä–Ω—ã–º–∏ —Ç—É—á–∞–º–∏')
            bot.send_message(message.chat.id, '–°–≤–µ—á–∏ –ø–æ—Ç—É—Ö–ª–∏')
            bot.send_message(message.chat.id, '–ß–∞—à–∞ –ø—É—Å—Ç–∞')
            bot.send_message(message.chat.id, '–ó–≤–µ–∑–¥—ã –≥–æ–≤–æ—Ä—è—Ç: <b>%s</b>' % '–ë–ª—è—Ç—å.',parse_mode='html')
            bot.send_message(message.chat.id, Theses[Tkey],parse_mode='html')
            bot.send_chat_action(message.chat.id, 'upload_document')
            bot.send_animation(message.chat.id, gif)
    except Exception:
        bot.send_message(message.chat.id, '–í–∞—à—É —Å—É–¥—å–±—É —Å–ª–æ–∂–Ω–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')

    bot.register_next_step_handler(message, start)         


def RandomRoman(message):  

    s = open('C:/Users/250/Desktop/Py/Bot/stikers/Rn.gif', 'rb')
    s1 = open('C:/Users/250/Desktop/Py/Bot/stikers/s1.PNG', 'rb')
    s2 = open('C:/Users/250/Desktop/Py/Bot/stikers/s2.jpg', 'rb')
    s3 = open('C:/Users/250/Desktop/Py/Bot/stikers/s3.jpg', 'rb')
    s4 = open('C:/Users/250/Desktop/Py/Bot/stikers/s4.jpg', 'rb')
    s5 = open('C:/Users/250/Desktop/Py/Bot/stikers/s5.PNG', 'rb')
    s6 = open('C:/Users/250/Desktop/Py/Bot/stikers/s6.PNG', 'rb')
    s7 = open('C:/Users/250/Desktop/Py/Bot/stikers/s7.PNG', 'rb')    
    
    roma = random.choice([s,s1,s2,s3,s4,s5,s6,s7])

    if roma == s:
        bot.send_chat_action(message.chat.id, 'record_video')
        bot.send_animation(message.chat.id, roma)
    else:
        bot.send_sticker(message.chat.id, roma)

    bot.register_next_step_handler(message, start)
    
       
def Pogoda(message):

    owm = pyowm.OWM(WTOKEN) 

    config_dict = get_default_config()
    config_dict['language'] = 'ru'

    place = '–ú–æ—Å–∫–≤–∞'
    wm = owm.weather_manager()   
    obs = wm.weather_at_place(place) #–ó–∞–¥–∞–µ–º –≥–æ—Ä–æ–¥

    w = obs.weather  #–û–±—ä–µ–∫—Ç —Å–æ –≤—Å–µ–π –ø–æ–≥–æ–¥–æ–π –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ

    t = w.temperature('celsius')   #–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞

    Temper = t['temp']
    if Temper > 0:
        Temper = '+'+str(Temper)

    Real_Temper = t['feels_like']
    if Real_Temper > 0:
        Real_Temper = '+'+str(Real_Temper)

    dt = w.detailed_status.capitalize() #–°—Ç–∞—Ç—É—Å –ø–æ–≥–æ–¥—ã

    wi = w.wind()['speed'] #–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ (–±–µ–∑ –º\—Å)

    pr = w.pressure['press'] #–î–∞–≤–ª–µ–Ω–∏–µ


    bot.send_message(message.chat.id, f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {Temper}, –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {Real_Temper} \n{dt} \n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wi} –º/—Å \n–î–∞–≤–ª–µ–Ω–∏–µ: {pr}')
    bot.register_next_step_handler(message, start)


@bot.callback_query_handler(func=lambda call: True)
def Anekdot(call):

    url1 = 'http://rzhunemogu.ru/RandJSON.aspx?CType=1'          
    url2 = 'http://rzhunemogu.ru/RandJSON.aspx?CType=11'
    url3 = 'http://rzhunemogu.ru/RandJSON.aspx?CType=13'

    r1 = requests.get(url1)
    r2 = requests.get(url2)
    r3 = requests.get(url3)

    b = r2.text
    b_plus = r1.text
    poetry = r3.text

    if call.data == 'b':    
        bot.answer_callback_query(call.id)                      #—É–±–∏—Ä–∞–µ—Ç –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text= b[12:-2], reply_markup=anekboard)
    elif call.data == 'b+':
        bot.answer_callback_query(call.id)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text= b_plus[12:-2], reply_markup=anekboard)
    elif call.data == 'poetry':
        bot.answer_callback_query(call.id)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text= poetry[12:-2], reply_markup=anekboard)
    

global Mo1,Mo2,We1,We2,Th1,Th2,Fr1,Fr2,Sa1,Sa2
Mo1 = ['        10:40|–ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏–∫–∞|–î–æ–≥–Ω–∞–∫|–ø—Ä|–ò-204-–±\n12:40|–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–µ –∏ –ø—Ä–∞–≤–æ–≤–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏|–î–æ–≥–Ω–∞–∫|–ø—Ä|–ò-204-–±\n']
Mo2 = ['        12:40|–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–µ –∏ –ø—Ä–∞–≤–æ–≤–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏|–î–æ–≥–Ω–∞–∫|–ø—Ä|–ò-204-–±\n14:20|–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ —Å–≤—è–∑–∏|–Ø—Ä–ª—ã–∫–æ–≤–∞|–ø—Ä|–ò-201\n16:20|–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è|–ñ–µ–º–µ—Ä–∏–∫–∏–Ω–∞|–ø—Ä|A-318\n18:00|–¶–∏—Ñ—Ä–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤|–ü–µ–≤–∑–Ω–µ—Ä|–ª–∞–±|–ì-401-1\n']
We1 = ['        12:40|–û—Å–Ω–æ–≤—ã —Ç–µ–æ—Ä–∏–∏ —á–∏—Å–µ–ª|–ó–∞–π—Ü–µ–≤|–¥–∏—Å—Ç–∞–Ω—Ç\n14:20|–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ —Å–≤—è–∑–∏|–Ø—Ä–ª—ã–∫–æ–≤–∞|–¥–∏—Å—Ç–∞–Ω—Ç\n12:40|–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Å–Ω–æ–≤—ã —Ç–µ–æ—Ä–∏–∏ –∑–∞—â–∏—Ç—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏|–ó–∞–π—Ü–µ–≤|–¥–∏—Å—Ç–∞–Ω—Ç\n18:00|–¢–µ–æ—Ä–∏—è —Ä–∞–¥–∏–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å–∏–≥–Ω–∞–ª–æ–≤|–ö–æ–∑–ª–æ–≤|\n']
We2 = ['        12:40|–û—Å–Ω–æ–≤—ã —Ç–µ–æ—Ä–∏–∏ —á–∏—Å–µ–ª|–ó–∞–π—Ü–µ–≤|–¥–∏—Å—Ç–∞–Ω—Ç\n14:20|–¶–∏—Ñ—Ä–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤|–ü–µ–≤–∑–Ω–µ—Ä|–¥–∏—Å—Ç–∞–Ω—Ç\n12:40|–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Å–Ω–æ–≤—ã —Ç–µ–æ—Ä–∏–∏ –∑–∞—â–∏—Ç—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏|–ó–∞–π—Ü–µ–≤|–¥–∏—Å—Ç–∞–Ω—Ç\n18:00|–¢–µ–æ—Ä–∏—è —Ä–∞–¥–∏–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å–∏–≥–Ω–∞–ª–æ–≤|–ö–æ–∑–ª–æ–≤|\n']
Th1 = ['        10:40|–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è|–ñ–µ–º–µ—Ä–∏–∫–∏–Ω–∞|–¥–∏—Å—Ç–∞–Ω—Ç\n12:40|–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–µ –∏ –ø—Ä–∞–≤–æ–≤–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏|–î–æ–≥–Ω–∞–∫|–¥–∏—Å—Ç–∞–Ω—Ç\n14:20|–ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏–∫–∞|–î–æ–≥–Ω–∞–∫|–¥–∏—Å—Ç–∞–Ω—Ç\n16:20|–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è|–®–∞—Ä–æ–≤–∞—Ç–æ–≤|–¥–∏—Å—Ç–∞–Ω—Ç\n']
Th2 = ['        12:40|–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–µ –∏ –ø—Ä–∞–≤–æ–≤–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏|–î–æ–≥–Ω–∞–∫|–¥–∏—Å—Ç–∞–Ω—Ç\n14:20|–ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏–∫–∞|–î–æ–≥–Ω–∞–∫|–¥–∏—Å—Ç–∞–Ω—Ç\n16:20|–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è|–®–∞—Ä–æ–≤–∞—Ç–æ–≤|–¥–∏—Å—Ç–∞–Ω—Ç\n']
Fr1 = ['        16:20|–¢–µ–æ—Ä–∏—è —Ä–∞–¥–∏–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å–∏–≥–Ω–∞–ª–æ–≤|–ê–≤–¥–µ–µ–≤|–ø—Ä|A-210\n18:00|–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Å–Ω–æ–≤—ã —Ç–µ–æ—Ä–∏–∏ –∑–∞—â–∏—Ç—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏|–ó–∞–π—Ü–µ–≤|–ª–∞–±|A-217\n']
Fr2 = ['        16:20|–¢–µ–æ—Ä–∏—è —Ä–∞–¥–∏–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å–∏–≥–Ω–∞–ª–æ–≤|–ê–≤–¥–µ–µ–≤|–ª–∞–±|A-210\n18:00|–û—Å–Ω–æ–≤—ã —Ç–µ–æ—Ä–∏–∏ —á–∏—Å–µ–ª|–ó–∞–π—Ü–µ–≤|–ø—Ä|A-217\n']
Sa1 = ['        16:20|–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è|–®–∞—Ä–æ–≤–∞—Ç–æ–≤|–ø—Ä|–ò-204-–±\n18:00|–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è|–®–∞—Ä–æ–≤–∞—Ç–æ–≤|–ø—Ä|–ò-204-–±\n']
Sa2 = ['        16:20|–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è|–®–∞—Ä–æ–≤–∞—Ç–æ–≤|–ø—Ä|–ò-204-–±\n18:00|–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è|–®–∞—Ä–æ–≤–∞—Ç–æ–≤|–ø—Ä|–ò-204-–±\n']


def razp(message):
    
    date_of_pars = message.text
    splitit = date_of_pars.split('.')

    bot.register_next_step_handler(message, start)  

    try:
        day = int(splitit[0])
        month = int(splitit[1])
        b = datetime(2021,int(month),int(day))
    except ValueError: 
        bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞. –í–≤–æ–¥–∏—Ç–µ <b>—á–∏—Å–ª–∞</b> —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É. –ú–æ–∂–Ω–æ –¥–∞–∂–µ –±–µ–∑ –Ω—É–ª–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä 3.5\n–°–µ–π—á–∞—Å –≤–∞—Å –≤–µ—Ä–Ω—É–ª–æ –≤ –º–µ–Ω—é',parse_mode='html')
    except Exception:
        bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞. –í–≤–æ–¥–∏—Ç–µ <b>—á–∏—Å–ª–∞</b> —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É. –ú–æ–∂–Ω–æ –¥–∞–∂–µ –±–µ–∑ –Ω—É–ª–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä 3.5\n–°–µ–π—á–∞—Å –≤–∞—Å –≤–µ—Ä–Ω—É–ª–æ –≤ –º–µ–Ω—é',parse_mode='html')
    else:
        day = int(splitit[0])
        month = int(splitit[1])
        week = None
        stik = open('C:/Users/250/Desktop/Py/Bot/stikers/pizdec.webp', 'rb')
        stik2 = open('C:/Users/250/Desktop/Py/Bot/stikers/kek2.tgs', 'rb')

        b = datetime(2021,int(month),int(day))
        sep = datetime(b.year if b.month >= 9 else b.year - 1, 9, 1) #–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —á–µ—Ç–Ω–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª–∏
        d1 = sep - timedelta(days=sep.weekday())
        d2 = b - timedelta(days=b.weekday())
        parity = ((d2 - d1).days // 7) % 2

        if parity == 1:
            week = 1
        else:
            week = 2

        t = b.strftime("%w")

        if int(t) == 6:
            if week == 1:
                bot.send_message(message.chat.id, '–°—É–±–±–æ—Ç–∞')
                bot.send_message(message.chat.id, Sa1)
            else:
                bot.send_message(message.chat.id, '–°—É–±–±–æ—Ç–∞')                            
                bot.send_message(message.chat.id, Sa2)
        elif int(t) == 5:
            if week == 1:
                bot.send_message(message.chat.id, '–ü—è—Ç–Ω–∏—Ü–∞')        
                bot.send_message(message.chat.id, Fr1)
            else:
                bot.send_message(message.chat.id, '–ü—è—Ç–Ω–∏—Ü–∞')
                bot.send_message(message.chat.id, Fr2)
        elif int(t) == 4:
            if week == 1:
                bot.send_message(message.chat.id, '–ß–µ—Ç–≤–µ—Ä–≥')
                bot.send_message(message.chat.id, Th1)          
            else:
                bot.send_message(message.chat.id, '–ß–µ—Ç–≤–µ—Ä–≥')
                bot.send_message(message.chat.id, Th2)
        elif int(t) == 3:
            if week == 1:
                bot.send_message(message.chat.id, '–°—Ä–µ–¥–∞')
                bot.send_message(message.chat.id, We1)
            else:
                bot.send_message(message.chat.id, '–°—Ä–µ–¥–∞')
                bot.send_message(message.chat.id, We2) 
        elif int(t) == 2:                              
            bot.send_message(message.chat.id, '–í—Ç–æ—Ä–Ω–∏–∫')
            bot.send_message(message.chat.id, '–í—ã—Ö–æ–¥–Ω–æ–π')
            bot.send_sticker(message.chat.id, stik2)
        elif int(t) == 0:                              
            bot.send_message(message.chat.id, '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ')
            bot.send_message(message.chat.id, '–í—ã—Ö–æ–¥–Ω–æ–π')
            bot.send_sticker(message.chat.id, stik2)
        elif int(t) == 1:
            if week == 1:
                bot.send_message(message.chat.id, '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
                bot.send_message(message.chat.id, Mo1)   
            else:
                bot.send_message(message.chat.id, '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
                bot.send_message(message.chat.id, Mo2)
                bot.send_sticker(message.chat.id, stik)
    finally:
        bot.register_next_step_handler(message, start)


def segodnya(message):

    stik = open('C:/Users/250/Desktop/Py/Bot/stikers/pizdec.webp', 'rb')
    stik2 = open('C:/Users/250/Desktop/Py/Bot/stikers/kek2.tgs', 'rb')

    now = datetime.now() 
    sep = datetime(now.year if now.month >= 9 else now.year - 1, 9, 1)    #–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —á–µ—Ç–Ω–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª–∏
    d1 = sep - timedelta(days=sep.weekday())
    d2 = now - timedelta(days=now.weekday())
    parity = ((d2 - d1).days // 7) % 2
    
    if parity == 1:
        week = 1
    else:
        week = 2 

    t = now.strftime("%w")

    if int(t) == 6:
        if week == 1:
            bot.send_message(message.chat.id, '–°—É–±–±–æ—Ç–∞')
            bot.send_message(message.chat.id, Sa1)
        else:
            bot.send_message(message.chat.id, '–°—É–±–±–æ—Ç–∞')                           
            bot.send_message(message.chat.id, Sa2)
    elif int(t) == 5:
        if week == 1:
            bot.send_message(message.chat.id, '–ü—è—Ç–Ω–∏—Ü–∞')        
            bot.send_message(message.chat.id, Fr1)
        else:
            bot.send_message(message.chat.id, '–ü—è—Ç–Ω–∏—Ü–∞')
            bot.send_message(message.chat.id, Fr2)
    elif int(t) == 4:
        if week == 1:
            bot.send_message(message.chat.id, '–ß–µ—Ç–≤–µ—Ä–≥')
            bot.send_message(message.chat.id, Th1)          
        else:
            bot.send_message(message.chat.id, '–ß–µ—Ç–≤–µ—Ä–≥')
            bot.send_message(message.chat.id, Th2)
    elif int(t) == 3:
        if week == 1:
            bot.send_message(message.chat.id, '–°—Ä–µ–¥–∞')
            bot.send_message(message.chat.id, We1)
        else:
            bot.send_message(message.chat.id, '–°—Ä–µ–¥–∞')
            bot.send_message(message.chat.id, We2)
    elif int(t) == 2:                             
        bot.send_message(message.chat.id, '–í—Ç–æ—Ä–Ω–∏–∫')
        bot.send_message(message.chat.id, '–í—ã—Ö–æ–¥–Ω–æ–π')
        bot.send_sticker(message.chat.id, stik2)
    elif int(t) == 0:                             
        bot.send_message(message.chat.id, '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ')
        bot.send_message(message.chat.id, '–í—ã—Ö–æ–¥–Ω–æ–π')
        bot.send_sticker(message.chat.id, stik2)
    elif int(t) == 1:
        if week == 1:
            bot.send_message(message.chat.id, '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
            bot.send_message(message.chat.id, Mo1)   
        else:
            bot.send_message(message.chat.id, '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
            bot.send_message(message.chat.id, Mo2)
            bot.send_sticker(message.chat.id, stik)

    bot.register_next_step_handler(message, start)    


def zavtra(message):

    stik = open('C:/Users/250/Desktop/Py/Bot/stikers/pizdec.webp', 'rb')
    stik2 = open('C:/Users/250/Desktop/Py/Bot/stikers/kek2.tgs', 'rb')
        
    now = datetime.now()                                    
    sep = datetime(now.year if now.month >= 9 else now.year - 1, 9, 1)         #–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —á–µ—Ç–Ω–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª–∏
    d1 = sep - timedelta(days=sep.weekday())
    d2 = now - timedelta(days=now.weekday())
    parity = ((d2 - d1).days // 7) % 2

    if parity == 1:
        week = 1
    else:
        week = 2 

    t = int(now.strftime("%w")) + 1

    if t == 7:
        t = 0

    if int(t) == 6:
        if week == 1:
            bot.send_message(message.chat.id, '–°—É–±–±–æ—Ç–∞')
            bot.send_message(message.chat.id, Sa1)
        else:
            bot.send_message(message.chat.id, '–°—É–±–±–æ—Ç–∞')                            
            bot.send_message(message.chat.id, Sa2)
    elif int(t) == 5:
        if week == 1:
            bot.send_message(message.chat.id, '–ü—è—Ç–Ω–∏—Ü–∞')        
            bot.send_message(message.chat.id, Fr1)
        else:
            bot.send_message(message.chat.id, '–ü—è—Ç–Ω–∏—Ü–∞')
            bot.send_message(message.chat.id, Fr2)
    elif int(t) == 4:
        if week == 1:
            bot.send_message(message.chat.id, '–ß–µ—Ç–≤–µ—Ä–≥')
            bot.send_message(message.chat.id, Th1)          
        else:
            bot.send_message(message.chat.id, '–ß–µ—Ç–≤–µ—Ä–≥')
            bot.send_message(message.chat.id, Th2)
    elif int(t) == 3:
        if week == 1:
            bot.send_message(message.chat.id, '–°—Ä–µ–¥–∞')
            bot.send_message(message.chat.id, We1)
        else:
            bot.send_message(message.chat.id, '–°—Ä–µ–¥–∞')
            bot.send_message(message.chat.id, We2)
    elif int(t) == 2:                              
        bot.send_message(message.chat.id, '–í—Ç–æ—Ä–Ω–∏–∫')
        bot.send_message(message.chat.id, '–í—ã—Ö–æ–¥–Ω–æ–π')
        bot.send_sticker(message.chat.id, stik2)
    elif int(t) == 0:                             
        bot.send_message(message.chat.id, '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ')
        bot.send_message(message.chat.id, '–í—ã—Ö–æ–¥–Ω–æ–π')
        bot.send_sticker(message.chat.id, stik2)
    elif int(t) == 1:
        if week == 1:
            bot.send_message(message.chat.id, '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
            bot.send_message(message.chat.id, Mo1)   
        else:
            bot.send_message(message.chat.id, '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
            bot.send_message(message.chat.id, Mo2)
            bot.send_sticker(message.chat.id, stik)

    bot.register_next_step_handler(message, start)  



bot.polling(none_stop=True, interval=0)


